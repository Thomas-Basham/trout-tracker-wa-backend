AWSTemplateFormatVersion: '2010-09-09'
Description: Fargate task that runs a Docker scraper every 10 minutes using Secrets Manager for RDS credentials

Parameters:
  ECRImageUri:
    Type: String
    Description: ECR image URI (e.g. 123456789012.dkr.ecr.us-west-2.amazonaws.com/scraper:latest)

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC for the Fargate task

  SubnetIds:
    Type: CommaDelimitedList
    Description: Comma-separated list of private subnet IDs

  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security group allowing egress to RDS

  SecretArn:
    Type: String
    Description: ARN of the Secrets Manager secret with RDS credentials

Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: ScheduledScraperCluster

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ScraperTaskExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: ReadSecretsManager
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Ref SecretArn

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/scraper
      RetentionInDays: 7

  ScraperTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: ScraperTask
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: scraper
          Image: !Ref ECRImageUri
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/scraper
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: scraper
          Secrets:
            - Name: DB_USERNAME
              ValueFrom: !Sub "${SecretArn}:username::"
            - Name: DB_PASSWORD
              ValueFrom: !Sub "${SecretArn}:password::"
            - Name: DB_HOST
              ValueFrom: !Sub "${SecretArn}:host::"
            - Name: DB_PORT
              ValueFrom: !Sub "${SecretArn}:port::"
            - Name: DB_NAME
              ValueFrom: !Sub "${SecretArn}:dbname::"

  EventsInvokeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EventsInvokeECSTask
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AllowECSRunTask
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecs:RunTask
                  - iam:PassRole
                Resource: "*"

  ScraperScheduleRule:
    Type: AWS::Events::Rule
    Properties:
      Name: RunScraperEvery24Hours
      ScheduleExpression: rate(24 hours)
      State: ENABLED
      Targets:
        - Id: ScraperTarget
          Arn: !GetAtt ECSCluster.Arn
          RoleArn: !GetAtt EventsInvokeRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref ScraperTaskDefinition
            LaunchType: FARGATE
            PlatformVersion: LATEST
            NetworkConfiguration:
              AwsVpcConfiguration:
                Subnets: !Ref SubnetIds
                SecurityGroups:
                  - !Ref SecurityGroupId
                AssignPublicIp: ENABLED

Outputs:
  TaskDefinitionArn:
    Value: !Ref ScraperTaskDefinition
  LogGroupName:
    Value: /ecs/scraper
  Schedule:
    Value: rate(24 hours)
